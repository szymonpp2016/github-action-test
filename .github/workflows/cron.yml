name: SHOULD_BE_TRIGGERD_BY_CRON

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
    - cron: "0/10 20-23 * * 1"

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "DISPATCHES_PAYLOAD"
  DISPATCHES_PAYLOAD:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 5  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: PAYLOAD # you can spec. in POSTMAN / API POST - request - to insert STRING to GitHub Action
        run: echo ${{ github.event.client_payload.env }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: List files before
        run: |
          pwd
          ls -a

      - name: checkout
        uses: actions/checkout@v2

      - name: List of FILES
        id: greet
        run: |
          pwd
          ls -a
      - name: List of GithubActions VARIABLES  
        run: | 
          echo "1. GITHUB_SHA  $GITHUB_SHA"                 #  	The commit SHA that triggered the workflow.  
          echo "2. GITHUB_WORKSPACE $GITHUB_WORKSPACE"      #   The GitHub workspace directory path.
          echo "3. GITHUB_RUN_ID $GITHUB_RUN_ID"            #   A unique number for each run within a repository. 
          echo "4. GITHUB_RUN_NUMBER $GITHUB_RUN_NUMBER"    #   Unique number for each run of a particular workflow in a repository.
          echo "5. GITHUB_ACTION $GITHUB_ACTION"            #   The unique identifier (id) of the action.
          echo "6. GITHUB_ACTIONS $GITHUB_ACTIONS"          #   Always set to true when GitHub Actions is running the workflow.
          echo "7.  GITHUB_ACTOR $GITHUB_ACTOR"             #   The name of the person or app that initiated the workflow. 
          echo "8.  GITHUB_REPOSITORY $GITHUB_REPOSITORY"   #   The owner and repository name. For example, octocat/Hello-World.
          echo "9.  GITHUB_EVENT_NAME $GITHUB_EVENT_NAME"   #   The name of the webhook event that triggered the workflow.
          echo "10. GITHUB_EVENT_PATH $GITHUB_EVENT_PATH"   #   The path of the file with the complete webhook event payload.
          echo "11. GITHUB_REF $GITHUB_REF"                 #   Only set for pull request events. The name of the head branch.
          echo "12. GITHUB_BASE_REF $GITHUB_BASE_REF"       #   Only set for pull request events. The name of the base branch.
          echo "13. GITHUB_SERVER_URL $GITHUB_SERVER_URL"   #   Returns the URL of the GitHub server.
          echo "14. GITHUB_API_URL $GITHUB_API_URL"         #   Returns the API URL.
          echo "1. GITHUB_GRAPHQL_URL $GITHUB_GRAPHQL_URL" #   Returns the GraphQL API URL..

      - name: List of GitHubActions CONTEXT  
        id: cont
        run: | 
          echo "1. steps.greet.outputs.time  ${{ steps.greet.outputs.time }}  "      
          echo "3. steps.cont.outputs.time  ${{ steps.cont.outputs.time }}  "          
          echo "1. job.container.id ${{ job.container.id }}  "                 
          echo "3. job.status ${{ job.status }}  "                        
          echo "4. runner.os ${{ runner.os }}"        