name: ENV Var.
on: push
env:
  WF_ENV: ${{secrets.WF_ENV}} TEST 1

jobs:
  log-env:
    runs-on: ubuntu-latest
    env:
      JOB_ENV: Avalible to all stpes TEST 2
    steps: 
      - name: local Env
        env: 
          STEP_ENV: local
        run: |
          echo "WF_ENV: OK ${WF_ENV} "
          echo "JOB_ENV: OK ${JOB_ENV} "     
          echo "STEP_ENV: OK ${STEP_ENV} " 
      - name: Log Env Var in diffrent steps
        run: |
          echo "WF_ENV: OK2 ${WF_ENV} "
          echo "JOB_ENV: OK2 ${JOB_ENV} "
          echo "STEP_ENV: SHOULD FAIL ${STEP_ENV} " 
  log-defoult-env:
    runs-on: ubuntu-latest
    steps:
      - name: GITHUB Env
        run: |
          echo "${HOME}"
          echo "${GITHUB_ACTION}"
          echo "${GITHUB_ACTIONS}"
  create_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Push
        run: |
          pwd
          ls -a
          git remote add origin "https://$GITHUB_ACTOR:{{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot@bot.com"
          git fetch 
          git checkout master
          git branch --set-upstram-to=origin/master
          git pull
          ls -a
          echo $RANDOM >> random.txt
          git add -a
          git commit -m "random file"
          git push

      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
          "title": "TITLE:  Automated issue for commit: ${{ github.sha }}",
          "body": "BODY: This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
          }'